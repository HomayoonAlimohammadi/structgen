{{ $recipe := . }}
// Code generated by StructGen. DO NOT EDIT.
//
// This file was autogenerated by the {{ $recipe.ToolName }} tool on {{ $recipe.GenerateDate }}.
package {{ $recipe.PkgName }}

{{ if $recipe.Imports }}
import (
    {{ range $import := $recipe.Imports -}}
        {{ if $import.Alias }} {{ $import.Alias }} {{ end }} "{{ $import.Path }}"
    {{ end }}
)
{{ end }}

{{ range $struct := $recipe.Structs }}
    {{- if $struct.DocString }}
        {{ $struct.DocString }}
    {{ end -}}

    type {{ $struct.Name }} struct {
        {{ range $field := $struct.Fields -}}
            {{- if $field.DocString -}}
                {{ $field.DocString }}
            {{ end -}}
            {{ $field.Name }} {{ $field.Type }} `json:"{{ $field.OriginalName }},omitempty" yaml:"{{ $field.OriginalName }},omitempty"`
        {{ end -}}
    }

    func (v *{{ $struct.Name }}) ToMap() (map[string]any, error) {
        if v == nil {
            return map[string]any{}, nil
        }
        b, err := json.Marshal(v)
        if err != nil {
            return nil, fmt.Errorf("failed to marshal struct to json: %w", err)
        }
        res := map[string]any{} 
        if err := json.Unmarshal(b, &res); err != nil {
            return nil, fmt.Errorf("failed to unmarshal json to map: %w", err)
        }

        return res, nil
    }


{{ end }}
